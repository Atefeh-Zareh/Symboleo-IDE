/*
 * generated by Xtext 2.25.0
 */
package ca.uottawa.csmlab.symboleo.scoping;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;

import ca.uottawa.csmlab.symboleo.symboleo.PointAtomVariablePath;
import ca.uottawa.csmlab.symboleo.symboleo.SymboleoPackage;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class SymboleoScopeProvider extends AbstractSymboleoScopeProvider {
  
//  @Override
//  public IScope getScope(EObject context, EReference reference) {
//      // We want to define the Scope for the Element's superElement cross-reference
//      if (context instanceof PointAtomVariablePath
//              && reference == SymboleoPackage.Literals.POINT_ATOM_PArA) {
//          // Collect a list of candidates by going through the model
//          // EcoreUtil2 provides useful functionality to do that
//          // For example searching for all elements within the root Object's tree
//          EObject rootElement = EcoreUtil2.getRootContainer(context);
//          List<Element> candidates = EcoreUtil2.getAllContentsOfType(rootElement, Element.class);
//          // Create IEObjectDescriptions and puts them into an IScope instance
//          return Scopes.scopeFor(candidates);
//      }
//      return super.getScope(context, reference);
//  }


}
